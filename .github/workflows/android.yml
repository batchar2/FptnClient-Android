on:
  push:
    branches:
      - '**'
    tags:
      - '*'
  release:
    types: [published]

jobs:
  build_android:
    runs-on: ubuntu22.04_x64
    environment: RELEASE_ENVIRONMENT
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set environment variables
      run: |
        echo "PATH=$CMDLINE_TOOLS:$PATH" >> $GITHUB_ENV
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "KEY_ALIAS=$KEY_ALIAS" >> $GITHUB_ENV
        echo "KEY_PASSWORD=$KEY_PASSWORD" >> $GITHUB_ENV
        echo "STORE_PASSWORD=$STORE_PASSWORD" >> $GITHUB_ENV
        echo "KEYSTORE_PATH=$KEYSTORE_PATH" >> $GITHUB_ENV
      env:
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        KEYSTORE_PATH: ${{ vars.KEYSTORE_PATH }}
        ANDROID_HOME: /home/ubuntu/android-sdk #${{ vars.ANDROID_HOME }}
        CMDLINE_TOOLS: ${{ vars.CMDLINE_TOOLS }}

    - name: Create local.properties
      run: echo "sdk.dir=$ANDROID_HOME" > local.properties

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Set env
      if: github.event_name == 'release'
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Print Release Version
      if: github.event_name == 'release'
      run: |
        echo "Release Version: $RELEASE_VERSION"

    - name: Build project
      run: ./gradlew assembleDebug
    - name: Checks
      run: ./gradlew tomlCheck ktlintCheck detektCheck checkSortDependencies projectHealth
    - name: Run tests
      run: ./gradlew test

    - name: Build apk and aab
      run: ./gradlew assembleRelease bundleRelease

    - name: Upload apk
      if: github.event_name == 'release'
      uses: AButler/upload-release-assets@v3.0
      with:
        files: "app/build/outputs/apk/release/*.apk"
        repo-token: ${{ secrets.CI_TOKEN }}

    - name: Upload aab
      if: github.event_name == 'release'
      uses: AButler/upload-release-assets@v3.0
      with:
        files: "app/build/outputs/bundle/release/*.aab"
        repo-token: ${{ secrets.CI_TOKEN }}

    - name: Upload APK Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ApkArtifacts
        path: |
          app/build/outputs/apk/release/*.apk
        if-no-files-found: warn

    - name: Upload AAB Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: AabArtifacts
        path: |
          app/build/outputs/bundle/release/*.aab
        if-no-files-found: warn
