on:
  push:
    branches:
      - '**'
    tags:
      - '*'
  release:
    types: [published]

jobs:
  build_android:
    runs-on: ubuntu22.04_x64
    environment: RELEASE_ENVIRONMENT
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set version environment variables
      if: github.event_name == 'release'
      run: |
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        echo "RELEASE_VERSION_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Set dev version environment variables
      if: github.event_name != 'release'
      run: |
        echo "RELEASE_VERSION=0.0.0.1" >> $GITHUB_ENV
        echo "RELEASE_VERSION_NAME=$(date +'%Y-%m-%d__%H-%M-%S')-dev" >> $GITHUB_ENV

    - name: Set environment variables
      run: |
        echo "PATH=$CMDLINE_TOOLS:$PATH" >> $GITHUB_ENV
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "KEY_ALIAS=$KEY_ALIAS" >> $GITHUB_ENV
        echo "KEY_PASSWORD=$KEY_PASSWORD" >> $GITHUB_ENV
        echo "STORE_PASSWORD=$STORE_PASSWORD" >> $GITHUB_ENV
        echo "KEYSTORE_PATH=$KEYSTORE_PATH" >> $GITHUB_ENV
      env:
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        KEYSTORE_PATH: ${{ vars.KEYSTORE_PATH }}
        ANDROID_HOME: ${{ vars.ANDROID_HOME }}
        CMDLINE_TOOLS: ${{ vars.CMDLINE_TOOLS }}

    - name: Create local.properties
      run: echo "sdk.dir=$ANDROID_HOME" > local.properties

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Print Release Version
      if: github.event_name == 'release'
      run: |
        echo "Release Version: $RELEASE_VERSION"

    - name: Build project
      run: ./gradlew assembleDebug
    - name: Checks
      run: ./gradlew tomlCheck ktlintCheck detektCheck checkSortDependencies projectHealth
    - name: Run tests
      run: ./gradlew test

    - name: Build APK and AAB
      run: |
        ./gradlew assembleRelease bundleRelease
        AAB_FILE=(app/build/outputs/bundle/release/app-release.aab)
        if [ -f "$AAB_FILE" ]; then
          cp -v "$AAB_FILE" "fptn-android-${RELEASE_VERSION_NAME}.aab"
        else
          echo "Error: AAB file not found at $AAB_FILE"
          exit 1
        fi
        APK_FILES=(app/build/outputs/apk/release/*.apk)
        if [ -f "${APK_FILES[0]}" ]; then
          cp -v "${APK_FILES[0]}" "fptn-android-${RELEASE_VERSION_NAME}.apk"
        else
          echo "Error: No APK files found in app/build/outputs/apk/release/"
          exit 1
        fi

    - name: Upload APK to Release
      if: github.event_name == 'release'
      uses: AButler/upload-release-assets@v3.0
      with:
        files: "*.apk"
        repo-token: ${{ secrets.CI_TOKEN }}
    - name: Upload AAB to Release
      if: github.event_name == 'release'
      uses: AButler/upload-release-assets@v3.0
      with:
        files: "*.aab"
        repo-token: ${{ secrets.CI_TOKEN }}
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: AndroidArtifacts
        path: |
          *.apk
          *.aab
        if-no-files-found: warn
